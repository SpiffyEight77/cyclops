name: cyclops-CI

on:
  workflow_dispatch:
    inputs:
      version:
        required: true
        description: Version to be used as release name and image tagging

permissions:
  contents: write

jobs:
  update-install-manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

  release:
    needs:
      - update-install-manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch
      - name: Create release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          if [ "${{ steps.extract_branch.outputs.branch }}" = "main" ]; then
            gh release create ${{ github.event.inputs.version }} \
              --repo="https://github.com/SpiffyEight77/cyclops" \
              --title="${{ github.event.inputs.version }}" \
              --generate-notes
          else
            gh release create ${{ github.event.inputs.version }} \
              --repo="https://github.com/SpiffyEight77/cyclops" \
              --title="${{ github.event.inputs.version }}" \
              --generate-notes \
              --target ${{ steps.extract_branch.outputs.branch }}\
              --prerelease
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: '~> v1'
          args: release --clean
          workdir: ./cyctl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
